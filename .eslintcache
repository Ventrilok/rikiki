[{"/Users/pb/Dev/rikiki/src/index.js":"1","/Users/pb/Dev/rikiki/src/serviceWorker.js":"2","/Users/pb/Dev/rikiki/src/App.js":"3","/Users/pb/Dev/rikiki/src/game/game.js":"4","/Users/pb/Dev/rikiki/src/components/board/index.js":"5","/Users/pb/Dev/rikiki/src/game/moves/exchangetrump.js":"6","/Users/pb/Dev/rikiki/src/game/setup.js":"7","/Users/pb/Dev/rikiki/src/game/moves/index.js":"8","/Users/pb/Dev/rikiki/src/game/phases/index.js":"9","/Users/pb/Dev/rikiki/src/theme/theme.js":"10","/Users/pb/Dev/rikiki/src/utils/utils.js":"11","/Users/pb/Dev/rikiki/src/utils/constants.js":"12","/Users/pb/Dev/rikiki/src/game/moves/evalutetrick.js":"13","/Users/pb/Dev/rikiki/src/components/gamepanel/index.js":"14","/Users/pb/Dev/rikiki/src/components/playingcard/index.js":"15","/Users/pb/Dev/rikiki/src/components/hand/index.js":"16","/Users/pb/Dev/rikiki/src/components/playerlist/index.js":"17","/Users/pb/Dev/rikiki/src/game/phases/5-calculatescore.js":"18","/Users/pb/Dev/rikiki/src/game/phases/4-evalutetrick.js":"19","/Users/pb/Dev/rikiki/src/game/phases/3-playcard.js":"20","/Users/pb/Dev/rikiki/src/game/phases/2-bid.js":"21","/Users/pb/Dev/rikiki/src/game/phases/1-draw.js":"22","/Users/pb/Dev/rikiki/src/game/moves/playcard.js":"23","/Users/pb/Dev/rikiki/src/game/moves/bid.js":"24","/Users/pb/Dev/rikiki/src/game/moves/draw.js":"25","/Users/pb/Dev/rikiki/src/components/playerlistitem/index.js":"26","/Users/pb/Dev/rikiki/src/components/sequin/index.js":"27","/Users/pb/Dev/rikiki/src/lobby/index.js":"28","/Users/pb/Dev/rikiki/src/lobby/onlinelobby.js":"29","/Users/pb/Dev/rikiki/src/lobby/matcharea.js":"30","/Users/pb/Dev/rikiki/src/lobby/enterlobby.js":"31","/Users/pb/Dev/rikiki/src/lobby/lobbyheader.js":"32","/Users/pb/Dev/rikiki/src/lobby/matchcreator.js":"33","/Users/pb/Dev/rikiki/src/lobby/matchlist.js":"34","/Users/pb/Dev/rikiki/src/lobby/exitlobby.js":"35","/Users/pb/Dev/rikiki/src/lobby/matchlistitem.js":"36"},{"size":504,"mtime":1619761751387,"results":"37","hashOfConfig":"38"},{"size":5073,"mtime":1619952167959,"results":"39","hashOfConfig":"38"},{"size":111,"mtime":1619761751386,"results":"40","hashOfConfig":"38"},{"size":476,"mtime":1619962210809,"results":"41","hashOfConfig":"38"},{"size":12134,"mtime":1619964487172,"results":"42","hashOfConfig":"38"},{"size":598,"mtime":1619952167959,"results":"43","hashOfConfig":"38"},{"size":1485,"mtime":1620394323648,"results":"44","hashOfConfig":"38"},{"size":282,"mtime":1619761751386,"results":"45","hashOfConfig":"38"},{"size":296,"mtime":1619761751387,"results":"46","hashOfConfig":"38"},{"size":962,"mtime":1619964351067,"results":"47","hashOfConfig":"38"},{"size":475,"mtime":1619761751387,"results":"48","hashOfConfig":"38"},{"size":161,"mtime":1619959583328,"results":"49","hashOfConfig":"38"},{"size":492,"mtime":1619953034614,"results":"50","hashOfConfig":"38"},{"size":2060,"mtime":1619961346116,"results":"51","hashOfConfig":"38"},{"size":632,"mtime":1619959593402,"results":"52","hashOfConfig":"38"},{"size":962,"mtime":1619963289352,"results":"53","hashOfConfig":"38"},{"size":448,"mtime":1619952167959,"results":"54","hashOfConfig":"38"},{"size":979,"mtime":1619952602923,"results":"55","hashOfConfig":"38"},{"size":573,"mtime":1619952725986,"results":"56","hashOfConfig":"38"},{"size":531,"mtime":1619952914476,"results":"57","hashOfConfig":"38"},{"size":582,"mtime":1620394064967,"results":"58","hashOfConfig":"38"},{"size":485,"mtime":1620394081218,"results":"59","hashOfConfig":"38"},{"size":1042,"mtime":1619952994790,"results":"60","hashOfConfig":"38"},{"size":267,"mtime":1619953177163,"results":"61","hashOfConfig":"38"},{"size":1965,"mtime":1619953113069,"results":"62","hashOfConfig":"38"},{"size":2214,"mtime":1620394272075,"results":"63","hashOfConfig":"38"},{"size":408,"mtime":1619962602355,"results":"64","hashOfConfig":"38"},{"size":1592,"mtime":1619962893344,"results":"65","hashOfConfig":"38"},{"size":2585,"mtime":1619761751387,"results":"66","hashOfConfig":"38"},{"size":2661,"mtime":1619952368274,"results":"67","hashOfConfig":"38"},{"size":3716,"mtime":1619958300587,"results":"68","hashOfConfig":"38"},{"size":526,"mtime":1619761751387,"results":"69","hashOfConfig":"38"},{"size":2832,"mtime":1619952167959,"results":"70","hashOfConfig":"38"},{"size":1911,"mtime":1619761751387,"results":"71","hashOfConfig":"38"},{"size":1500,"mtime":1619952483529,"results":"72","hashOfConfig":"38"},{"size":3030,"mtime":1619952433856,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"14vkjeo",{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"/Users/pb/Dev/rikiki/src/index.js",[],["155","156","157","158","159"],"/Users/pb/Dev/rikiki/src/serviceWorker.js",["160","161","162","163","164","165"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/Users/pb/Dev/rikiki/src/App.js",[],"/Users/pb/Dev/rikiki/src/game/game.js",["166"],"import { setup } from './setup';\nimport { moves } from './moves';\nimport { exchangetrump } from './moves/exchangetrump';\nimport { phases } from './phases';\n\nconst Rikiki = {\n  name: 'Rikiki',\n  setup,\n  moves,\n  phases,\n  turn: {\n    stages: {\n      exchangeTrump: {\n        moves: { exchangetrump },\n      },\n    },\n  },\n\n  endIf: (G) => {\n    if (G.direction === 'down' && parseInt(G.currentLevel, 10) === 1) {\n      return 'end game';\n    }\n  },\n};\n\nexport default Rikiki;\n","/Users/pb/Dev/rikiki/src/components/board/index.js",["167"],"import React, { useState, useEffect } from 'react';\nimport { useTransition, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport Slide from '@material-ui/core/Slide';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { filter } from 'lodash';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout, {\n  Root,\n  getContent,\n  getFullscreen,\n  getDrawerSidebar,\n  getInsetFooter,\n} from '@mui-treasury/layout';\nimport theme from '../../theme/theme';\n\nimport GamePanel from '../gamepanel';\nimport PlayingCard from '../playingcard';\nimport PlayerList from '../playerlist';\nimport Sequin from '../sequin';\nimport Hand from '../hand';\n\nconst Content = getContent(styled);\nconst Fullscreen = getFullscreen(styled);\nconst DrawerSidebar = getDrawerSidebar(styled);\n\nconst InsetFooter = getInsetFooter(styled);\n\nconst images = require.context('../../images/', true);\n\nconst useStyles = makeStyles(() => ({\n  gameZone: {\n    backgroundColor: '#038c65',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23ffffff' fill-opacity='0.24' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E\")`,\n  },\n  trumpZone: {\n    textAlign: 'center',\n    padding: theme.spacing(2),\n  },\n  lastPlayedCards: {\n    borderRadius: '1vh',\n    borderStyle: 'dashed',\n    borderWidth: '2px',\n    borderColor: '#ffffff',\n    marginTop: 10,\n    textAlign: 'center',\n    color: '#ffffff',\n    padding: theme.spacing(2),\n  },\n  playingZone: {\n    textAlign: 'center',\n    padding: theme.spacing(2),\n  },\n  middle: {\n    flex: 'auto',\n    marginLeft: 10,\n  },\n  iconBtn: {\n    padding: 8,\n    backgroundColor: 'rgba(0, 0, 0, .04)',\n    '&:not(:last-child)': {\n      marginRight: 16,\n    },\n  },\n  bidValue: {\n    padding: '0px 8px',\n    fontSize: 20,\n  },\n}));\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nconst RikikiBoard = (props) => {\n  const { G, ctx, moves, playerID, matchData, onExitMatch } = props;\n  const isCurrentPlayer = playerID === ctx.currentPlayer;\n  const [centralDeck, setCentralDeck] = useState([]);\n\n  /** ******** Bidder functions ********* */\n  const [openBidder, setOpenBidder] = useState(false);\n  const [bid, setBid] = useState(null);\n\n  let totalBid = 0;\n  for (let i = 0; i < G.players.length; i++) {\n    totalBid += G.players[i].bid;\n  }\n\n  const forbbidenBid = G.currentLevel - totalBid;\n  const possibleBids = Array.from(Array(G.currentLevel + 1).keys());\n\n  if (G.nbBids + 1 === ctx.numPlayers) {\n    possibleBids.splice(forbbidenBid, 1);\n  }\n\n  function decreaseBid() {\n    if (bid === null) {\n      setBid(forbbidenBid !== 0 ? 0 : 1);\n    } else if (possibleBids.includes(bid - 1)) {\n      setBid(bid - 1);\n    } else if (bid - 2 >= 0) {\n      setBid(bid - 2);\n    }\n  }\n\n  function increaseBid() {\n    if (bid === null) {\n      setBid(forbbidenBid !== 0 ? 0 : 1);\n    } else if (possibleBids.includes(bid + 1)) {\n      setBid(bid + 1);\n    } else if (bid + 2 <= G.currentLevel) {\n      setBid(bid + 2);\n    }\n  }\n  function abosluteZero() {\n    moves.bid(0, true);\n    setOpenBidder(false);\n  }\n\n  function announceBid() {\n    moves.bid(bid, false);\n    setOpenBidder(false);\n  }\n  /** ******** Bidder functions ********* */\n\n  /** ******** Exchange Trump functions ********* */\n  const [openExchange, setOpenExchange] = useState(false);\n\n  function exchangeTrump(doExchange) {\n    moves.exchangetrump(doExchange);\n    setOpenExchange(false);\n  }\n  /** ******** Exchange Trump functions ********* */\n\n  /** ******** Play functions ********* */\n  function playCard(index) {\n    if (G.playedCards.length === 0) {\n      // if there is no card played then, the player can play anything\n      moves.playcard(index);\n    } else {\n      const playerCard = G.players[ctx.currentPlayer].hand[index]; // Get the intended card to play\n      const results = filter(G.players[ctx.currentPlayer].hand, ['suit', G.playedCards[0].suit]); // Check if player has any card of the suite of the 1st card thrown\n      if (results.length > 0 && playerCard.suit == G.playedCards[0].suit) {\n        moves.playcard(index);\n      } else if (results.length === 0) {\n        moves.playcard(index);\n      }\n    }\n  }\n  /** ******** Play functions ********* */\n\n  /** ******** Phase control functions ********* */\n  useEffect(() => {\n    switch (ctx.phase) {\n      case 'draw':\n        setOpenExchange(G.canExchange && playerID.toString() === G.playerCanExchange.toString());\n        break;\n      case 'bid':\n        setOpenBidder(isCurrentPlayer);\n        break;\n      default:\n    }\n  });\n\n  const isGameOver = ctx.gameover !== undefined;\n  /** ******** Phase control functions ********* */\n\n  useEffect(() => {\n    let timer;\n    if (ctx.phase === 'bid') {\n      setCentralDeck([]);\n    } else if (G.playedCards.length === 0) {\n      setCentralDeck(G.lastPlayedCards);\n      timer = setTimeout(() => {\n        setCentralDeck([]);\n      }, 1500);\n    } else if (G.playedCards.length > 0) {\n      setCentralDeck(G.playedCards);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [G.playedCards]);\n\n  /* Layout settings */\n  const styles = useStyles();\n  const scheme = Layout();\n  scheme.configureHeader((builder) => {\n    builder.create('appHeader').registerConfig('xs', {\n      position: 'relative',\n      initialHeight: 60,\n    });\n  });\n  scheme.configureEdgeSidebar((builder) => {\n    builder.create('primarySidebar', { anchor: 'left' }).registerPermanentConfig('xs', {\n      width: '25%',\n      collapsible: true,\n      collapsedWidth: 80,\n    });\n  });\n  scheme.enableAutoCollapse('primarySidebar', 'sm');\n  scheme.configureInsetSidebar((builder) => {\n    builder.create('secondarySidebar', { anchor: 'right' }).registerAbsoluteConfig('sm', {\n      width: '33%',\n    });\n  });\n\n  const transitions = useTransition(centralDeck, (card) => card.key, {\n    initial: { opacity: 1 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  });\n\n  return (\n    <Fullscreen className={styles.gameZone}>\n      <Root theme={theme} scheme={scheme}>\n        <CssBaseline />\n        <DrawerSidebar sidebarId=\"primarySidebar\">\n          <Box py=\"10px\" px={2} display=\"flex\" alignItems=\"center\">\n            <Typography variant=\"h5\" className={styles.middle}>\n              <b>\n                {typeof matchData !== 'undefined' ? matchData[playerID].name : G.players[0].name}\n              </b>\n            </Typography>\n            <IconButton className={styles.iconBtn}>\n              <ExitToApp onClick={onExitMatch} />\n            </IconButton>\n          </Box>\n          <GamePanel\n            direction={G.direction}\n            currentLevel={G.currentLevel}\n            totalRound={G.totalRound}\n          />\n          <PlayerList\n            players={G.players}\n            playerNames={matchData}\n            currentPlayer={ctx.currentPlayer}\n          />\n        </DrawerSidebar>\n        <Content>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={4}>\n            <Grid item xs={6}>\n              <Box className={styles.trumpZone}>\n                <PlayingCard card={G.trump} cardWidth={120} />\n              </Box>\n            </Grid>\n            <Grid item xs={5}>\n              <Box className={styles.lastPlayedCards}>\n                {G.lastPlayedCards.length === 0\n                  ? 'Dernier pli'\n                  : G.lastPlayedCards.map((card) => (\n                      <PlayingCard card={card} cardWidth={80} key={card.key} />\n                    ))}\n              </Box>\n            </Grid>\n            <Grid item xs={12} className={styles.playingZone}>\n              <div className=\"hand hhand active-hand\">\n                {transitions.map(({ item, key }) => (\n                  <animated.img\n                    key={key}\n                    style={props}\n                    alt=\"\"\n                    className=\"card\"\n                    width={120}\n                    src={images(`./${item.point}${item.suit.toUpperCase()}.svg`).default}\n                  />\n                ))}\n              </div>\n            </Grid>\n          </Grid>\n        </Content>\n        <InsetFooter ContainerProps={{ disableGutters: true }}>\n          <Box display=\"flex\" p={1}>\n            <Hand\n              cards={G.players[playerID].hand}\n              cardWidth={100}\n              spacing={0.25}\n              active={isCurrentPlayer}\n              onPlayCard={playCard}\n            />\n          </Box>\n        </InsetFooter>\n\n        <Dialog\n          disableBackdropClick\n          disableEscapeKeyDown\n          open={openExchange}\n          aria-labelledby=\"dialog-exchange\"\n          TransitionComponent={Transition}\n        >\n          <DialogTitle id=\"dialog-exchange\">Echange</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Désires-tu échanger ton 2 d&apos;atout avec l&apos;atout actuel?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => exchangeTrump(false)} color=\"secondary\" variant=\"contained\">\n              Non\n            </Button>\n            <Button onClick={() => exchangeTrump(true)} color=\"primary\" variant=\"contained\">\n              Oui\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          disableBackdropClick\n          disableEscapeKeyDown\n          open={openBidder}\n          aria-labelledby=\"dialog-bidder\"\n          TransitionComponent={Transition}\n        >\n          <DialogTitle id=\"dialog-bidder\">Paris</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Combien de pli penses-tu être capable de faire ?\n            </DialogContentText>\n            <Box mb={2} align=\"center\">\n              <IconButton onClick={() => decreaseBid()}>\n                <Remove />\n              </IconButton>\n              <span className={styles.bidValue}>{bid}</span>\n              <IconButton onClick={() => increaseBid()}>\n                <Add />\n              </IconButton>\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            {G.currentLevel >= 7 && (\n              <Button onClick={abosluteZero} color=\"secondary\" variant=\"contained\">\n                Je tente le zéro absolu\n              </Button>\n            )}\n            <Button\n              disabled={bid === null}\n              onClick={announceBid}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Je valide {bid}\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={isGameOver}\n          aria-labelledby=\"dialog-gameover\"\n          TransitionComponent={Transition}\n        >\n          <DialogTitle id=\"dialog-gameover\">Fin de partie</DialogTitle>\n          <DialogContent>\n            <Sequin run={isGameOver} />\n            <DialogContentText id=\"alert-dialog-description\">\n              Merci d&apos;avoir joué.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onExitMatch} color=\"primary\" variant=\"contained\">\n              Quitter la partie\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Root>\n    </Fullscreen>\n  );\n};\n\nexport default RikikiBoard;\n","/Users/pb/Dev/rikiki/src/game/moves/exchangetrump.js",[],"/Users/pb/Dev/rikiki/src/game/setup.js",[],"/Users/pb/Dev/rikiki/src/game/moves/index.js",[],"/Users/pb/Dev/rikiki/src/game/phases/index.js",[],"/Users/pb/Dev/rikiki/src/theme/theme.js",[],"/Users/pb/Dev/rikiki/src/utils/utils.js",[],"/Users/pb/Dev/rikiki/src/utils/constants.js",[],"/Users/pb/Dev/rikiki/src/game/moves/evalutetrick.js",[],"/Users/pb/Dev/rikiki/src/components/gamepanel/index.js",[],"/Users/pb/Dev/rikiki/src/components/playingcard/index.js",["168"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst images = require.context('../../images/', true);\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    width: ({ cardWidth }) => cardWidth,\n    margin: 0,\n    padding: 0,\n    border: 0,\n  },\n}));\n\nconst PlayingCard = ({ card, cardWidth, onClick }) => {\n  const styles = useStyles({ cardWidth });\n\n  const cardSVG =\n    card.length !== 0\n      ? images(`./${card.key.toUpperCase()}.svg`).default\n      : images('./RED_BACK.svg').default;\n\n  return <img className={styles.card} src={cardSVG} onClick={onClick} />;\n};\n\nexport default PlayingCard;\n","/Users/pb/Dev/rikiki/src/components/hand/index.js",[],"/Users/pb/Dev/rikiki/src/components/playerlist/index.js",[],"/Users/pb/Dev/rikiki/src/game/phases/5-calculatescore.js",["169"],"import { isAllPlayerReady } from '../../utils/utils';\n\nexport const calculatescore = {\n  next: 'draw',\n  onBegin: (G, ctx) => {\n    for (let i = 0; i < ctx.numPlayers; i++) {\n      let score = 0;\n      if (G.players[i].absoluteZero && G.players[i].tricks === 0) {\n        score = 20;\n      } else if (G.players[i].absoluteZero && G.players[i].tricks !== 0) {\n        score = -20;\n      } else {\n        // Calculate the score\n        if (G.players[i].bid === G.players[i].tricks) {\n          score = 10;\n          if (G.players[i].bid > 0) {\n            score += 2 * G.players[i].tricks;\n          }\n        } else {\n          score += -2 * Math.abs(G.players[i].tricks - G.players[i].bid);\n        }\n      }\n      G.players[i].score += score;\n      G.players[i].ready = true;\n    }\n    return G;\n  },\n  onEnd: (G, ctx) => {\n    for (let i = 0; i < ctx.numPlayers; i++) {\n      G.players[i].ready = false;\n    }\n    return G;\n  },\n  endIf: (G) => isAllPlayerReady(G.players),\n};\n","/Users/pb/Dev/rikiki/src/game/phases/4-evalutetrick.js",["170"],"import { moves } from '../moves';\nimport { isAllPlayerReady } from '../../utils/utils';\n\nexport const evalutetrick = {\n  moves: {\n    evalutetrick: moves.evalutetrick,\n  },\n  onBegin: (G, ctx) => {\n    moves.evalutetrick(G, ctx);\n  },\n  onEnd: (G, ctx) => {\n    for (let i = 0; i < ctx.numPlayers; i++) {\n      G.players[i].playedcard = [];\n      G.players[i].ready = false;\n    }\n    return G;\n  },\n  endIf: (G) => {\n    if (isAllPlayerReady(G.players)) {\n      return {\n        next: G.players[0].hand.length === 0 ? 'calculatescore' : 'playcard',\n      };\n    }\n  },\n};\n","/Users/pb/Dev/rikiki/src/game/phases/3-playcard.js",[],"/Users/pb/Dev/rikiki/src/game/phases/2-bid.js",[],"/Users/pb/Dev/rikiki/src/game/phases/1-draw.js",[],"/Users/pb/Dev/rikiki/src/game/moves/playcard.js",[],"/Users/pb/Dev/rikiki/src/game/moves/bid.js",[],"/Users/pb/Dev/rikiki/src/game/moves/draw.js",[],"/Users/pb/Dev/rikiki/src/components/playerlistitem/index.js",[],"/Users/pb/Dev/rikiki/src/components/sequin/index.js",[],"/Users/pb/Dev/rikiki/src/lobby/index.js",["171"],"import React from 'react';\nimport { Lobby } from 'boardgame.io/react';\nimport Rikiki from '../game/game';\nimport RikikiBoard from '../components/board';\nimport OnlineLobby from './onlinelobby';\n\nRikiki.minPlayers = 2;\nRikiki.maxPlayers = 10;\n\nconst { protocol, hostname, port } = window.location;\n\nconst server = `${protocol}//${hostname}:${port == 3000 ? 8000 : port}`;\n\nconst importedGames = [{ game: Rikiki, board: RikikiBoard }];\n\nfunction MyLobby() {\n  return (\n    <Lobby\n      gameServer={server}\n      lobbyServer={server}\n      debug={false}\n      refreshInterval={2500}\n      gameComponents={importedGames}\n      renderer={({\n        errorMsg,\n        gameComponents,\n        matches,\n        phase,\n        playerName,\n        runningMatch,\n        handleEnterLobby,\n        handleCreateMatch,\n        handleJoinMatch,\n        handleLeaveMatch,\n        handleExitLobby,\n        handleRefreshMatches,\n        handleStartMatch,\n        handleExitMatch,\n      }) => (\n        <OnlineLobby\n          errorMsg={errorMsg}\n          gameComponents={gameComponents}\n          matches={matches}\n          phase={phase}\n          playerName={playerName}\n          runningMatch={runningMatch}\n          onEnterLobby={handleEnterLobby}\n          onCreateMatch={handleCreateMatch}\n          onJoinMatch={handleJoinMatch}\n          onLeaveMatch={handleLeaveMatch}\n          onExitLobby={handleExitLobby}\n          onRefreshMatches={handleRefreshMatches}\n          onStartMatch={handleStartMatch}\n          onExitMatch={handleExitMatch}\n        />\n      )}\n    />\n  );\n}\n\nexport default MyLobby;\n",["172","173","174","175","176"],"/Users/pb/Dev/rikiki/src/lobby/onlinelobby.js",[],"/Users/pb/Dev/rikiki/src/lobby/matcharea.js",[],"/Users/pb/Dev/rikiki/src/lobby/enterlobby.js",[],"/Users/pb/Dev/rikiki/src/lobby/lobbyheader.js",[],"/Users/pb/Dev/rikiki/src/lobby/matchcreator.js",[],"/Users/pb/Dev/rikiki/src/lobby/matchlist.js",[],"/Users/pb/Dev/rikiki/src/lobby/exitlobby.js",[],"/Users/pb/Dev/rikiki/src/lobby/matchlistitem.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":42,"column":11,"nodeType":"189","messageId":"190","endLine":42,"endColumn":22},{"ruleId":"187","severity":1,"message":"188","line":70,"column":15,"nodeType":"189","messageId":"190","endLine":70,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":83,"column":15,"nodeType":"189","messageId":"190","endLine":83,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":95,"column":7,"nodeType":"189","messageId":"190","endLine":95,"endColumn":20},{"ruleId":"187","severity":1,"message":"188","line":123,"column":7,"nodeType":"189","messageId":"190","endLine":123,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":134,"column":9,"nodeType":"189","messageId":"190","endLine":134,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":19,"column":14,"nodeType":"193","messageId":"194"},{"ruleId":"195","severity":1,"message":"196","line":154,"column":49,"nodeType":"197","messageId":"190","endLine":154,"endColumn":51},{"ruleId":"198","severity":1,"message":"199","line":23,"column":10,"nodeType":"200","endLine":23,"endColumn":73},{"ruleId":"201","severity":1,"message":"202","line":14,"column":9,"nodeType":"203","messageId":"204","endLine":21,"endColumn":10},{"ruleId":"191","severity":1,"message":"192","line":18,"column":14,"nodeType":"193","messageId":"194"},{"ruleId":"195","severity":1,"message":"196","line":12,"column":49,"nodeType":"197","messageId":"190","endLine":12,"endColumn":51},{"ruleId":"177","replacedBy":"205"},{"ruleId":"179","replacedBy":"206"},{"ruleId":"181","replacedBy":"207"},{"ruleId":"183","replacedBy":"208"},{"ruleId":"185","replacedBy":"209"},"lines-around-directive",["210"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","consistent-return","Expected to return a value at the end of arrow function 'endIf'.","ArrowFunctionExpression","missingReturn","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/no-noninteractive-element-interactions","Non-interactive elements should not be assigned mouse or keyboard event listeners.","JSXOpeningElement","no-lonely-if","Unexpected if as the only statement in an else block.","IfStatement","unexpectedLonelyIf",["210"],[],[],[],[],"padding-line-between-statements"]